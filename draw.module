<?php
/**
 * Implementation of hook_menu.
 */
function draw_menu() {
  $items = array();
  $items['admin/config/content/drupal_draw'] = array(
    'title' => 'Draw settings',
    'description' => 'Configuration for Draw',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('draw_admin_form'),
    'file' => 'draw.admin.inc',
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/content/drupal_draw/edit_background/%'] = array(
    'title' => 'Draw create background',
    'description' => 'Make or edit a background for Draw',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('draw_background_form'),
    'file' => 'draw.admin.inc',
    'access arguments' => array('access administration pages'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_field_widget_info.
 * Make the diagram an option for text_long fields.
 */
function draw_field_widget_info(){
  return array(
    'diagram' => array(
      'label' => t('Diagram'),
      'field types' => array('text_long'),
      'behaviors' => array(
      'multiple values' => FIELD_BEHAVIOR_DEFAULT, 
      'default value' => FIELD_BEHAVIOR_DEFAULT,
      ),
    ),
    
  );
}
/** 
 * Implements hook_field_widget_form.
 * Include the needed JS.
 */
function draw_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $textarea_id = $element['#field_name'] . '[' . $element['#language'] . '][' . $element['#delta'] . '][value]';
  $image_path = drupal_get_path('module', 'draw') . '/images';
  $create_image_uri = 'public://drupal_draw/';
  $path = drupal_get_path('module', 'draw');
  drupal_add_css($path . '/jquery_draw.css', array('type' => 'file'));
  drupal_add_js($path . '/js/' . 'raphael-min.js');
  //drupal_add_js($path . 'editor_base.js');
  drupal_add_js($path . '/js/' . 'jquery_draw.js');
 // drupal_add_js($path . 'draw_basic.js');
  $draw_settings = variable_get('draw_settings', array('canvas_width' => 400, 'canvas_height' => 640, 'backgrounds' => array()));

  drupal_add_js(array('draw_settings' => $draw_settings), 'setting');
  
  $inline_js = 'jQuery(document).ready(function(){ jQuery(".draw-diagram-input").raphaelPaper({backgrounds: Drupal.settings.draw_settings.backgrounds }); });';

  drupal_add_js($inline_js, array('type' => 'inline'));

  $element['value']= array(
    '#type' => 'textarea', // hidden',
    '#prefix' => '<span>' . t('Select background') . '</span>'
               . '<select class="draw-background-select" id="draw-background-' . $textarea_id . '"></select>'
               . '<div id="draw-diagram" data-target_element="' . $textarea_id . '" data-image_path="' . $image_path . '"></div>',
    '#attributes' => array('class' => array('draw-diagram-input')),
    '#default_value' => empty($items) ? '' : $items[0]['value'],
  );
  return $element; 
}

/**
 * Implementation of hook_preprocess_field.
 * Creates the drawing in frontend.
 */
function draw_preprocess_field(&$variables) {
  if ($variables['field_name_css'] == 'field-diagram') {
    $draw_settings = variable_get('draw_settings', array('canvas_width' => 400, 'canvas_height' => 640, 'backgrounds' => array()));
    drupal_add_js(array('draw_settings' => $draw_settings), 'setting');

    $nid = $variables['element']['#object']->nid;
    $image_path = drupal_get_path('module', 'draw') . '/images';
    $path = drupal_get_path('module', 'draw');
    drupal_add_js($path . '/js/' . 'raphael-min.js');
    drupal_add_js($path . '/js/' . 'draw_fe_render.js');
    drupal_add_js($path . '/js/' . 'draw_basic.js');



    $json = json_decode($variables['element']['#items'][0]['value'], TRUE);
    $variables['element']['#items'][0]['value'] = '<div class="canvas"></div>';
    $variables['items'][0]['#markup'] = '<div class="draw-canvas" id="draw-diagram-' . $nid .'" data-nid="' . $nid .'" data-image_path="' . $image_path . '"></div>';
    drupal_add_js(array('draw' => array('drawing-' . $nid => $json)), 'setting');
  }
}